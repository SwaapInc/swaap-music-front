{"version":3,"sources":["modules/auth.js","modules/search.js","util/utils.js","sagas/auth.js","sagas/search.js","sagas/sagas.js","serviceWorker.js","modeles/Artist.js","modeles/Album.js","modeles/Track.js","components/Tracks.jsx","components/Header.jsx","components/Body.jsx","App.jsx","index.jsx"],"names":["LOGIN","LOGIN_REQUEST","LOGOUT","TOGGLE_LOADING","loginUser","user","type","toggleLoading","reducer","state","loading","action","SEARCH_REQUEST","TOGGLE_SEARCHBAR","DISPLAY_TRACKS","toggleSearch","displayTracks","tracks","searchBar","searchValue","dataDeezer","dataSpotify","search","sleep","ms","Promise","resolve","setTimeout","requestLoginUser","authenticationSaga","put","axios","post","catch","error","console","log","data","takeEvery","requestSearchTrack","searchTrackSaga","get","items","auth","Boolean","window","location","hostname","match","Artist","artist","this","id","name","Album","album","artists","map","image","images","url","Track","track","Tracks","props","item","alt","src","Header","useSelector","dispatch","useDispatch","className","placeholder","value","onChange","event","target","onClick","role","length","Body","App","sagaMiddleware","createSagaMiddleware","middleware","push","logger","store","createStore","combineReducers","reducers","applyMiddleware","sagas","forEach","saga","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.905eda5b.chunk.js","sourcesContent":["export const LOGIN = 'app/auth/LOGIN'\r\nexport const LOGIN_REQUEST = 'app/auth/LOGIN_REQUEST'\r\nexport const LOGOUT = 'app/auth/LOGOUT'\r\nexport const TOGGLE_LOADING = 'app/auth/LOADING'\r\n\r\nexport const loginUser = user => ({\r\n    type: LOGIN,\r\n    user,\r\n})\r\n\r\nexport const logoutUser = () => ({\r\n    type: LOGOUT,\r\n})\r\n\r\nexport const toggleLoading = () => ({\r\n    type: TOGGLE_LOADING,\r\n})\r\n\r\nexport const requestLoginUser = () => ({\r\n    type: LOGIN_REQUEST,\r\n})\r\n\r\nexport default function reducer(\r\n    state = {user: null, loading: false},\r\n    action,\r\n) {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n            }\r\n        case TOGGLE_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: !state.loading,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const SEARCH_REQUEST = 'app/auth/SEARCH_REQUEST'\r\nexport const TOGGLE_SEARCHBAR = 'app/auth/SEARCHBAR'\r\nexport const DISPLAY_TRACKS = 'app/auth/TRACKS'\r\n\r\nexport const toggleSearch = () => ({\r\n    type: TOGGLE_SEARCHBAR,\r\n})\r\n\r\nexport const requestSearchTrack = (search) => ({\r\n    type: SEARCH_REQUEST,\r\n    search,\r\n})\r\n\r\nexport const displayTracks = (tracks) => ({\r\n    type: DISPLAY_TRACKS,\r\n    tracks,\r\n})\r\n\r\nexport default function reducer(\r\n    state = {searchBar: false,\r\n        searchValue: '',\r\n        tracks: {\r\n            dataDeezer: {},\r\n            dataSpotify: {},\r\n        }},\r\n    action,\r\n) {\r\n    switch (action.type) {\r\n        case TOGGLE_SEARCHBAR:\r\n            return {\r\n                ...state,\r\n                searchBar: !state.searchBar,\r\n                searchValue: '',\r\n            }\r\n        case SEARCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                searchValue: action.search,\r\n            }\r\n        case DISPLAY_TRACKS:\r\n            return {\r\n                ...state,\r\n                tracks: {\r\n                    dataDeezer: action.tracks.dataDeezer,\r\n                    dataSpotify: action.tracks.dataSpotify,\r\n                },\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}","import {put, takeEvery} from 'redux-saga/effects'\r\nimport {LOGIN_REQUEST, loginUser, toggleLoading} from \"../modules/auth\";\r\nimport axios from 'axios';\r\nimport {sleep} from \"../util/utils\";\r\n\r\nfunction* requestLoginUser() {\r\n    yield put(toggleLoading());\r\n    const {data} = yield axios.post('/api/user', {}).catch(function (error) {\r\n        console.log(error);\r\n    });\r\n    yield sleep(200);\r\n    yield put(loginUser(data));\r\n    yield put(toggleLoading());\r\n}\r\n\r\nexport default function* authenticationSaga() {\r\n    yield takeEvery(LOGIN_REQUEST, requestLoginUser);\r\n}","import {put, takeEvery} from 'redux-saga/effects'\r\nimport {displayTracks, SEARCH_REQUEST} from \"../modules/search\";\r\nimport axios from 'axios';\r\n\r\nfunction* requestSearchTrack(search) {\r\n    let searchValue = search.search\r\n    if (searchValue !== '') {\r\n        const dataDeezer = yield axios.get(`/api/deezer/search/track?q=${searchValue}`, {}).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n        const dataSpotify = yield axios.get(`/api/spotify/search?q=${searchValue}&type=track`, {}).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n        if(dataSpotify !== null){\r\n            const tracks = {\r\n                dataDeezer,\r\n                dataSpotify: dataSpotify.data.tracks.items,\r\n            }\r\n            yield put(displayTracks(tracks))\r\n        }\r\n    }\r\n}\r\n\r\nexport default function* searchTrackSaga() {\r\n    yield takeEvery(SEARCH_REQUEST, requestSearchTrack);\r\n}","import { default as auth } from './auth'\r\nimport { default as search } from './search'\r\nexport default [\r\n    auth,\r\n    search\r\n]","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","class Artist{\r\n    constructor(artist) {\r\n        this.id = artist.id\r\n        this.name = artist.name\r\n    }\r\n}\r\n\r\nexport default Artist","import Artist from \"./Artist\";\r\nclass Album{\r\n    constructor(album) {\r\n        this.id = album.id\r\n        this.name = album.name\r\n        this.artists = album.artists.map(artist => new Artist(artist))\r\n        this.image = album.images[0].url\r\n        //this.releaseDate = album.release_date\r\n    }\r\n}\r\n\r\nexport default Album","import Album from \"./Album\";\r\nimport Artist from \"./Artist\";\r\nclass Track{\r\n    constructor(track) {\r\n        this.id = track.id\r\n        this.album = new Album(track.album)\r\n        this.artists = track.artists.map(artist => new Artist(artist))\r\n        this.name = track.name\r\n    }\r\n}\r\n\r\nexport default Track","import React from 'react';\r\nimport Track from \"../modeles/Track\";\r\n\r\nconst Tracks = (props) => {\r\n    const tracks = props.items.map(item => new Track(item))\r\n    console.log('tracks : ')\r\n    console.log(tracks)\r\n    return (\r\n        <div>\r\n            <ul>{tracks.map((track) => {\r\n                return (\r\n                    <li>\r\n                        <div>{track.name}</div>\r\n                        <div>{track.album.name}</div>\r\n                        <img alt={track.name} src={track.album.image}/>\r\n                    </li>\r\n                )\r\n            })}</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tracks;","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {requestLoginUser, logoutUser} from '../modules/auth';\r\nimport {requestSearchTrack, toggleSearch} from '../modules/search';\r\nimport Tracks from \"./Tracks\";\r\n\r\nconst Header = () => {\r\n    const {user, loading} = useSelector(state => state.auth);\r\n    const {searchBar, searchValue, tracks} = useSelector(state => state.search);\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div id=\"kt_header\" className=\"kt-header kt-grid__item kt-grid kt-grid--ver  kt-header--fixed \">\r\n\r\n            <div className=\"kt-header__brand   kt-grid__item\" id=\"kt_header_brand\">\r\n                Swaap\r\n            </div>\r\n\r\n            <button className=\"kt-header-menu-wrapper-close\" id=\"kt_header_menu_mobile_close_btn\">\r\n                <i className=\"la la-close\"/>\r\n            </button>\r\n            <div className=\"kt-header-menu-wrapper kt-grid__item\" id=\"kt_header_menu_wrapper\">\r\n                <div id=\"kt_header_menu\" className=\"kt-header-menu kt-header-menu-mobile \">\r\n                    <ul className=\"kt-menu__nav \">\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"kt-header__topbar kt-grid__item kt-grid__item--fluid\">\r\n                {!searchBar ? (\r\n                    <div className=\"kt-header__topbar-item kt-header__topbar-item--search\">\r\n                        <div className=\"kt-header__topbar-wrapper\" id=\"kt_offcanvas_toolbar_search_toggler_btn\"\r\n                             onClick={() => dispatch(toggleSearch())}>\r\n                            <span className=\"kt-header__topbar-icon\"><i className=\"flaticon2-search\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <form className=\"kt-quick-search__form\">\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">\r\n                                    <i className=\"flaticon2-search-1\"/>\r\n                                </span>\r\n                            </div>\r\n                            <input type=\"text\" className=\"form-control kt-quick-search__input\"\r\n                                   placeholder=\"Type here...\" name=\"query\" value={searchValue}\r\n                                   onChange={event => dispatch(requestSearchTrack(event.target.value))}/>\r\n                                   <div className=\"input-group-append\"\r\n                                onClick={() => dispatch(toggleSearch())}>\r\n                                    <span className=\"input-group-text\">\r\n                                        <i className=\"la la-close kt-quick-search__close\"/>\r\n                                     </span>\r\n                                </div>\r\n                        </div>\r\n                    </form>\r\n                )} {loading ? (\r\n                    <div className=\"kt-header__topbar kt-grid__item kt-grid__item--fluid\">\r\n                        <div className=\"kt-header__topbar-item kt-header__topbar-item--user\"\r\n                             id=\"kt_offcanvas_toolbar_profile_toggler_btn\">\r\n                            <div className=\"kt-header__topbar-username\">\r\n                                <div className=\"spinner-border text-light\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : user ? (\r\n                    <div className=\"kt-header__topbar kt-grid__item kt-grid__item--fluid\">\r\n                        <div className=\"kt-header__topbar-item kt-header__topbar-item--user\"\r\n                             onClick={() => dispatch(logoutUser())}\r\n                             id=\"kt_offcanvas_toolbar_profile_toggler_btn\">\r\n                            <div className=\"kt-header__topbar-welcome\">\r\n                                Hi,\r\n                            </div>\r\n                            <div className=\"kt-header__topbar-username\">\r\n                                {user.name}\r\n                            </div>\r\n                            <div className=\"kt-header__topbar-wrapper\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"kt-header__topbar kt-grid__item kt-grid__item--fluid\">\r\n                        <div className=\"kt-header__topbar-item kt-header__topbar-item--user\"\r\n                             onClick={() => dispatch(requestLoginUser())}\r\n                             id=\"kt_offcanvas_toolbar_profile_toggler_btn\">\r\n                            <div className=\"kt-header__topbar-username\">\r\n                                <i className=\"fa fa-sign-in-alt\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {(tracks.dataDeezer.length !== 0) ? (\r\n                    <div>\r\n                        <span>Deezer</span>\r\n                    </div>\r\n                ) : (tracks.dataSpotify.length !== 0) ? (\r\n                    <div>\r\n                        <Tracks items={tracks.dataSpotify}/>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <span>Empty</span>\r\n                    </div>)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nconst Body = () => {\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body","import React from 'react';\r\nimport './App.css';\r\nimport './components/Header';\r\nimport Header from \"./components/Header\";\r\nimport Body from \"./components/Body\";\r\nconst App = () => {\r\n\r\n    return (\r\n        <div className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-wrapper\" id=\"kt-wrapper\" >\r\n            <Header />\r\n            <Body />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {combineReducers, createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport logger from 'redux-logger'\r\nimport * as reducers from \"./modules/reducers\";\r\nimport sagas from \"./sagas/sagas\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\n//TODO : ROUTING AVEC react-router-5\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n    middleware.push(logger)\r\n}\r\n\r\nconst store = createStore(\r\n    combineReducers(reducers),\r\n    applyMiddleware(...middleware),\r\n);\r\n\r\nsagas.forEach(saga => sagaMiddleware.run(saga))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Travail\\\\2-Cours\\\\M2\\\\node\\\\swaap\\\\swaap\\\\frontend\\\\src\\\\index.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport * as reducers from \"./modules/reducers\";\nimport sagas from \"./sagas/sagas\";\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport { reduxReactRouter, ReduxRouter } from 'redux-router';\nimport { Route } from 'react-router';\nimport Login from \"./components/Login\"; //TODO : ROUTING AVEC react-router-5\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'production') {\n  middleware.push(logger);\n}\n\nconst routes = React.createElement(Route, {\n  path: \"/\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"login\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}));\nconst store = createStore(combineReducers(reducers), applyMiddleware(...middleware), reduxReactRouter({\n  routes\n}));\nsagas.forEach(saga => sagaMiddleware.run(saga));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Travail/2-Cours/M2/node/swaap/swaap/frontend/src/index.jsx"],"names":["React","ReactDOM","combineReducers","createStore","applyMiddleware","Provider","createSagaMiddleware","logger","reducers","sagas","serviceWorker","App","reduxReactRouter","ReduxRouter","Route","Login","sagaMiddleware","middleware","process","env","NODE_ENV","push","routes","store","forEach","saga","run","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,cAA9C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AAEA,MAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,MAAMW,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCH,EAAAA,UAAU,CAACI,IAAX,CAAgBd,MAAhB;AACH;;AAED,MAAMe,MAAM,GACR,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,SAAS,EAAEX,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAoB,EAAA,SAAS,EAAEI,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ;AAMA,MAAMQ,KAAK,GAAGpB,WAAW,CACrBD,eAAe,CAACM,QAAD,CADM,EAErBJ,eAAe,CAAC,GAAGa,UAAJ,CAFM,EAGrBL,gBAAgB,CAAC;AACbU,EAAAA;AADa,CAAD,CAHK,CAAzB;AAQAb,KAAK,CAACe,OAAN,CAAcC,IAAI,IAAIT,cAAc,CAACU,GAAf,CAAmBD,IAAnB,CAAtB;AAEAxB,QAAQ,CAAC0B,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADR,CADJ,EAGiBK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHjB,E,CAKA;AACA;AACA;;AACAnB,aAAa,CAACoB,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {combineReducers, createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport logger from 'redux-logger'\r\nimport * as reducers from \"./modules/reducers\";\r\nimport sagas from \"./sagas/sagas\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport { reduxReactRouter, ReduxRouter } from 'redux-router';\r\nimport { Route } from 'react-router';\r\nimport Login from \"./components/Login\";\r\n\r\n//TODO : ROUTING AVEC react-router-5\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n    middleware.push(logger)\r\n}\r\n\r\nconst routes = (\r\n    <Route path=\"/\" component={App}>\r\n        <Route path=\"login\" component={Login}/>\r\n    </Route>\r\n);\r\n\r\nconst store = createStore(\r\n    combineReducers(reducers),\r\n    applyMiddleware(...middleware),\r\n    reduxReactRouter({\r\n        routes\r\n    }),\r\n);\r\n\r\nsagas.forEach(saga => sagaMiddleware.run(saga))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n            <App/>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}
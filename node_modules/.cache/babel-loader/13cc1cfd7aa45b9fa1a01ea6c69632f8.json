{"ast":null,"code":"import Track from \"../modeles/Track\";\nimport fs from 'fs';\nimport UserLite from \"../modeles/UserLite\";\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport function formatSpotifyTrack(dataSpotifyToFormat) {\n  return new Track(dataSpotifyToFormat);\n}\nexport function formatDeezerTrack(dataDeezerToFormat) {\n  return new Track({\n    id: dataDeezerToFormat.id,\n    name: dataDeezerToFormat.title,\n    album: {\n      id: dataDeezerToFormat.album.id,\n      name: dataDeezerToFormat.album.title,\n      images: [{\n        url: dataDeezerToFormat.album.cover_big\n      }, {\n        url: dataDeezerToFormat.album.cover_medium\n      }, {\n        url: dataDeezerToFormat.album.cover_small\n      }],\n      artists: [{\n        id: dataDeezerToFormat.artist.id,\n        name: dataDeezerToFormat.artist.name\n      }]\n    },\n    artists: [{\n      id: dataDeezerToFormat.artist.id,\n      name: dataDeezerToFormat.artist.name\n    }]\n  });\n}\nexport function formatSimpleUser(userToFormat) {\n  return new UserLite(userToFormat);\n}\nexport async function readFile(path) {\n  new Promise((resolve, reject) => {\n    fs.readFile('./properties/access.json', 'utf8', (err, data) => {\n      if (err) reject(err);\n      resolve(JSON.parse(data));\n    });\n  });\n}","map":{"version":3,"sources":["C:/Travail/2-Cours/M2/node/swaap/swaap/frontend/src/util/utils.js"],"names":["Track","fs","UserLite","sleep","ms","Promise","resolve","setTimeout","formatSpotifyTrack","dataSpotifyToFormat","formatDeezerTrack","dataDeezerToFormat","id","name","title","album","images","url","cover_big","cover_medium","cover_small","artists","artist","formatSimpleUser","userToFormat","readFile","path","reject","err","data","JSON","parse"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAO,SAASC,KAAT,CAAeC,EAAf,EAAmB;AACtB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACH;AACD,OAAO,SAASI,kBAAT,CAA4BC,mBAA5B,EAAiD;AACpD,SAAO,IAAIT,KAAJ,CAAUS,mBAAV,CAAP;AACH;AACD,OAAO,SAASC,iBAAT,CAA2BC,kBAA3B,EAA+C;AAClD,SAAO,IAAIX,KAAJ,CAAU;AACbY,IAAAA,EAAE,EAAED,kBAAkB,CAACC,EADV;AAEbC,IAAAA,IAAI,EAAEF,kBAAkB,CAACG,KAFZ;AAGbC,IAAAA,KAAK,EAAE;AACHH,MAAAA,EAAE,EAAED,kBAAkB,CAACI,KAAnB,CAAyBH,EAD1B;AAEHC,MAAAA,IAAI,EAAEF,kBAAkB,CAACI,KAAnB,CAAyBD,KAF5B;AAGHE,MAAAA,MAAM,EAAE,CACJ;AAACC,QAAAA,GAAG,EAAEN,kBAAkB,CAACI,KAAnB,CAAyBG;AAA/B,OADI,EAEJ;AAACD,QAAAA,GAAG,EAAEN,kBAAkB,CAACI,KAAnB,CAAyBI;AAA/B,OAFI,EAGJ;AAACF,QAAAA,GAAG,EAAEN,kBAAkB,CAACI,KAAnB,CAAyBK;AAA/B,OAHI,CAHL;AAQHC,MAAAA,OAAO,EAAE,CAAC;AACNT,QAAAA,EAAE,EAAED,kBAAkB,CAACW,MAAnB,CAA0BV,EADxB;AAENC,QAAAA,IAAI,EAAEF,kBAAkB,CAACW,MAAnB,CAA0BT;AAF1B,OAAD;AARN,KAHM;AAgBbQ,IAAAA,OAAO,EAAE,CAAC;AACNT,MAAAA,EAAE,EAAED,kBAAkB,CAACW,MAAnB,CAA0BV,EADxB;AAENC,MAAAA,IAAI,EAAEF,kBAAkB,CAACW,MAAnB,CAA0BT;AAF1B,KAAD;AAhBI,GAAV,CAAP;AAqBH;AACD,OAAO,SAASU,gBAAT,CAA0BC,YAA1B,EAAwC;AAC3C,SAAO,IAAItB,QAAJ,CAAasB,YAAb,CAAP;AACH;AAED,OAAO,eAAeC,QAAf,CAAwBC,IAAxB,EAA8B;AACjC,MAAIrB,OAAJ,CAAY,CAACC,OAAD,EAAUqB,MAAV,KAAqB;AAC7B1B,IAAAA,EAAE,CAACwB,QAAH,CAAY,0BAAZ,EAAwC,MAAxC,EAAgD,CAACG,GAAD,EAAMC,IAAN,KAAe;AAC3D,UAAID,GAAJ,EACID,MAAM,CAACC,GAAD,CAAN;AACJtB,MAAAA,OAAO,CAACwB,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAD,CAAP;AACH,KAJD;AAKH,GAND;AAOH","sourcesContent":["import Track from \"../modeles/Track\";\r\nimport fs from 'fs'\r\nimport UserLite from \"../modeles/UserLite\";\r\n\r\nexport function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nexport function formatSpotifyTrack(dataSpotifyToFormat) {\r\n    return new Track(dataSpotifyToFormat)\r\n}\r\nexport function formatDeezerTrack(dataDeezerToFormat) {\r\n    return new Track({\r\n        id: dataDeezerToFormat.id,\r\n        name: dataDeezerToFormat.title,\r\n        album: {\r\n            id: dataDeezerToFormat.album.id,\r\n            name: dataDeezerToFormat.album.title,\r\n            images: [\r\n                {url: dataDeezerToFormat.album.cover_big},\r\n                {url: dataDeezerToFormat.album.cover_medium},\r\n                {url: dataDeezerToFormat.album.cover_small},\r\n            ],\r\n            artists: [{\r\n                id: dataDeezerToFormat.artist.id,\r\n                name: dataDeezerToFormat.artist.name,\r\n            }],\r\n        },\r\n        artists: [{\r\n            id: dataDeezerToFormat.artist.id,\r\n            name: dataDeezerToFormat.artist.name,\r\n        }]\r\n    })\r\n}\r\nexport function formatSimpleUser(userToFormat) {\r\n    return new UserLite(userToFormat)\r\n}\r\n\r\nexport async function readFile(path) {\r\n    new Promise((resolve, reject) => {\r\n        fs.readFile('./properties/access.json', 'utf8', (err, data) => {\r\n            if (err)\r\n                reject(err)\r\n            resolve(JSON.parse(data))\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}
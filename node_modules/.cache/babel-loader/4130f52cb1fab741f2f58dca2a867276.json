{"ast":null,"code":"import { formatDeezerTrack } from \"../util/utils\";\nimport axios from \"axios\";\n\nfunction formatData(data) {\n  try {\n    return data.data.data.map(item => formatDeezerTrack(item));\n  } catch (e) {\n    return [];\n  }\n}\n\nclass DeezerService {\n  async searchTrackFromCompleteRequestInBean(requestInBean) {\n    const title = requestInBean.title,\n          album = requestInBean.album,\n          artist = requestInBean.artist;\n    let res = await axios.get(\"/api/deezer/search/advanced?artist=\".concat(artist.name, \"&title=\").concat(title, \"&album=\").concat(album.name, \"&type=track\"), {}).catch(function (error) {\n      console.error(error);\n    });\n\n    if (res === null) {\n      res = await axios.get(\"/api/deezer/search/advanced?artist=\".concat(artist.name, \"&title=\").concat(title, \"&type=track\"), {}).catch(function (error) {\n        console.error(error);\n      });\n    }\n\n    const data = formatData(res);\n    return data.length === 0 ? false : data[0];\n  }\n\n  async searchTrackBasic(searchValue) {\n    const res = await axios.get(\"/api/deezer/search?q=\".concat(searchValue, \"&type=track\"), {}).catch(function (error) {\n      console.error(error);\n    });\n    return formatData(res);\n  }\n\n  async getTrackFromId(id) {\n    const _ref = await axios.get(\"/api/deezer/get/track/\".concat(id), {}).catch(function (error) {\n      console.error(error);\n    }),\n          data = _ref.data;\n\n    return formatDeezerTrack(data);\n  }\n\n  async getPlaylistFull(url) {\n    const res = await axios.get(\"\".concat(url), {}).catch(function (error) {\n      console.error(error);\n    });\n    const items = res.data.tracks.data.map(item => formatDeezerTrack(item));\n    return {\n      items,\n      total: res.data.nb_tracks,\n      playlistName: res.data.title\n    };\n  }\n\n  async getPlaylistTracks(search) {\n    let url = search.url,\n        limit = search.limit,\n        offset = search.offset;\n\n    const _ref2 = await axios.get(\"\".concat(url, \"/tracks?limit=\").concat(limit, \"&offset=\").concat(offset), {}).catch(function (error) {\n      console.error(error);\n    }),\n          data = _ref2.data;\n\n    const items = data.data.map(item => formatDeezerTrack(item));\n    return {\n      items,\n      total: data.total\n    };\n  }\n\n}\n\nexport default DeezerService;","map":{"version":3,"sources":["C:/Travail/2-Cours/M2/node/swaap/swaap/frontend/src/services/DeezerService.js"],"names":["formatDeezerTrack","axios","formatData","data","map","item","e","DeezerService","searchTrackFromCompleteRequestInBean","requestInBean","title","album","artist","res","get","name","catch","error","console","length","searchTrackBasic","searchValue","getTrackFromId","id","getPlaylistFull","url","items","tracks","total","nb_tracks","playlistName","getPlaylistTracks","search","limit","offset"],"mappings":"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","sourcesContent":["import {formatDeezerTrack} from \"../util/utils\";\r\nimport axios from \"axios\";\r\n\r\nfunction formatData(data) {\r\n    try {\r\n        return data.data.data.map((item) => formatDeezerTrack(item))\r\n    } catch (e) {\r\n        return []\r\n    }\r\n}\r\n\r\nclass DeezerService {\r\n\r\n    async searchTrackFromCompleteRequestInBean(requestInBean) {\r\n        const {title, album, artist} = requestInBean\r\n\r\n        let res = await axios.get(`/api/deezer/search/advanced?artist=${artist.name}&title=${title}&album=${album.name}&type=track`, {})\r\n            .catch(function (error) {\r\n                console.error(error)\r\n            })\r\n        if(res === null){\r\n            res = await axios.get(`/api/deezer/search/advanced?artist=${artist.name}&title=${title}&type=track`, {})\r\n                .catch(function (error) {\r\n                    console.error(error)\r\n                })\r\n        }\r\n\r\n        const data = formatData(res)\r\n        return data.length === 0 ? false : data[0]\r\n    }\r\n\r\n    async searchTrackBasic(searchValue) {\r\n        const res = await axios.get(`/api/deezer/search?q=${searchValue}&type=track`, {}).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n\r\n        return formatData(res)\r\n    }\r\n\r\n    async getTrackFromId(id) {\r\n        const {data} = await axios.get(`/api/deezer/get/track/${id}`, {}).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n\r\n        return formatDeezerTrack(data)\r\n    }\r\n\r\n    async getPlaylistFull(url) {\r\n\r\n        const res = await axios.get(`${url}`, {}).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n\r\n        const items = res.data.tracks.data.map((item) => formatDeezerTrack(item))\r\n\r\n        return {\r\n            items,\r\n            total: res.data.nb_tracks,\r\n            playlistName: res.data.title,\r\n        }\r\n    }\r\n\r\n    async getPlaylistTracks(search) {\r\n        let {url, limit, offset} = search\r\n        const {data} = await axios.get(`${url}/tracks?limit=${limit}&offset=${offset}`, {}).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n\r\n        const items = data.data.map((item) => formatDeezerTrack(item))\r\n\r\n        return {\r\n            items,\r\n            total: data.total,\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default DeezerService"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Travail\\\\2-Cours\\\\M2\\\\node\\\\swaap\\\\swaap\\\\frontend\\\\src\\\\index.jsx\";\nimport { React, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport * as reducers from \"./modules/reducers\";\nimport sagas from \"./sagas/sagas\";\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport { Router, Route } from 'react-router';\nimport { useLocation } from 'react-router-dom';\nimport Login from \"./components/Login\"; //TODO : ROUTING AVEC react-router-5\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'production') {\n  middleware.push(logger);\n}\n\nconst store = createStore(combineReducers(reducers), applyMiddleware(...middleware));\n\nfunction usePageViews() {\n  let location = useLocation();\n  useEffect(() => {\n    ga.send(['pageview', location.pathname]);\n  }, [location]);\n}\n\nsagas.forEach(saga => sagaMiddleware.run(saga));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/login\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Travail/2-Cours/M2/node/swaap/swaap/frontend/src/index.jsx"],"names":["React","useEffect","ReactDOM","combineReducers","createStore","applyMiddleware","Provider","createSagaMiddleware","logger","reducers","sagas","serviceWorker","App","Router","Route","useLocation","Login","sagaMiddleware","middleware","process","env","NODE_ENV","push","store","usePageViews","location","ga","send","pathname","forEach","saga","run","render","document","getElementById","unregister"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,cAA9B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AAEA,MAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,MAAMW,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCH,EAAAA,UAAU,CAACI,IAAX,CAAgBd,MAAhB;AACH;;AAED,MAAMe,KAAK,GAAGnB,WAAW,CACrBD,eAAe,CAACM,QAAD,CADM,EAErBJ,eAAe,CAAC,GAAGa,UAAJ,CAFM,CAAzB;;AAKA,SAASM,YAAT,GAAwB;AACpB,MAAIC,QAAQ,GAAGV,WAAW,EAA1B;AAEAd,EAAAA,SAAS,CACL,MAAM;AACFyB,IAAAA,EAAE,CAACC,IAAH,CAAQ,CAAC,UAAD,EAAaF,QAAQ,CAACG,QAAtB,CAAR;AACH,GAHI,EAIL,CAACH,QAAD,CAJK,CAAT;AAMH;;AAEDf,KAAK,CAACmB,OAAN,CAAcC,IAAI,IAAIb,cAAc,CAACc,GAAf,CAAmBD,IAAnB,CAAtB;AAEA5B,QAAQ,CAAC8B,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAE,GAAb;AAAkB,EAAA,SAAS,EAAEX,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAE,QAAb;AAAwB,EAAA,SAAS,EAAEI,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,CADJ,EAMiBiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANjB,E,CAQA;AACA;AACA;;AACAvB,aAAa,CAACwB,UAAd","sourcesContent":["import {React, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {combineReducers, createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport logger from 'redux-logger'\r\nimport * as reducers from \"./modules/reducers\";\r\nimport sagas from \"./sagas/sagas\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport { Router, Route } from 'react-router';\r\nimport {useLocation} from 'react-router-dom';\r\nimport Login from \"./components/Login\";\r\n//TODO : ROUTING AVEC react-router-5\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n    middleware.push(logger)\r\n}\r\n\r\nconst store = createStore(\r\n    combineReducers(reducers),\r\n    applyMiddleware(...middleware),\r\n);\r\n\r\nfunction usePageViews() {\r\n    let location = useLocation()\r\n\r\n    useEffect(\r\n        () => {\r\n            ga.send(['pageview', location.pathname])\r\n        },\r\n        [location]\r\n    )\r\n}\r\n\r\nsagas.forEach(saga => sagaMiddleware.run(saga))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Route path={\"/\"} component={App}/>\r\n            <Route path={\"/login\"}  component={Login}/>\r\n        </Router>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}
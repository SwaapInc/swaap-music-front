{"ast":null,"code":"var _jsxFileName = \"C:\\\\Travail\\\\2-Cours\\\\M2\\\\node\\\\swaap\\\\swaap\\\\frontend\\\\src\\\\index.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport * as reducers from \"./modules/reducers\";\nimport sagas from \"./sagas/sagas\";\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport SignUp from \"./components/SignUp\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'production') {\n  middleware.push(logger);\n}\n\nconst store = createStore(combineReducers(reducers), applyMiddleware(...middleware));\nsagas.forEach(saga => sagaMiddleware.run(saga));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/public/login\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/public/signUp\",\n  component: SignUp,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), React.createElement(PrivateRoute, {\n  path: \"/private/\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Travail/2-Cours/M2/node/swaap/swaap/frontend/src/index.jsx"],"names":["React","ReactDOM","combineReducers","createStore","applyMiddleware","Provider","createSagaMiddleware","logger","reducers","sagas","serviceWorker","App","BrowserRouter","Route","Redirect","Login","PrivateRoute","SignUp","sagaMiddleware","middleware","process","env","NODE_ENV","push","store","forEach","saga","run","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,QAA9B,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,MAAMC,cAAc,GAAGZ,oBAAoB,EAA3C;AACA,MAAMa,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCH,EAAAA,UAAU,CAACI,IAAX,CAAgBhB,MAAhB;AACH;;AAED,MAAMiB,KAAK,GAAGrB,WAAW,CACrBD,eAAe,CAACM,QAAD,CADM,EAErBJ,eAAe,CAAC,GAAGe,UAAJ,CAFM,CAAzB;AAKAV,KAAK,CAACgB,OAAN,CAAcC,IAAI,IAAIR,cAAc,CAACS,GAAf,CAAmBD,IAAnB,CAAtB;AAEAzB,QAAQ,CAAC2B,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,eAAZ;AAA4B,EAAA,SAAS,EAAET,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,gBAAZ;AAA6B,EAAA,SAAS,EAAEE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAII,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAC,WAAnB;AAA+B,EAAA,SAAS,EAAEN,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,CADJ,CADJ,EAQiBkB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARjB,E,CAUA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {combineReducers, createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport logger from 'redux-logger'\r\nimport * as reducers from \"./modules/reducers\";\r\nimport sagas from \"./sagas/sagas\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport {BrowserRouter, Route, Redirect} from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport SignUp from \"./components/SignUp\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n    middleware.push(logger)\r\n}\r\n\r\nconst store = createStore(\r\n    combineReducers(reducers),\r\n    applyMiddleware(...middleware),\r\n);\r\n\r\nsagas.forEach(saga => sagaMiddleware.run(saga))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            \r\n            <Route path='/public/login' component={Login}/>\r\n            <Route path='/public/signUp' component={SignUp}/>\r\n            <PrivateRoute path='/private/' component={App}/>\r\n        </BrowserRouter>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.routerDidChange = routerDidChange;\nexports.initRoutes = initRoutes;\nexports.replaceRoutes = replaceRoutes;\nexports.historyAPI = historyAPI;\n\nvar _constants = require('./constants');\n/**\n * Action creator for signaling that the router has changed.\n * @private\n * @param  {RouterState} state - New router state\n * @return {Action} Action object\n */\n\n\nfunction routerDidChange(state) {\n  return {\n    type: _constants.ROUTER_DID_CHANGE,\n    payload: state\n  };\n}\n/**\n * Action creator that initiates route config\n * @private\n * @param {Array<Route>|ReactElement} routes - New routes\n */\n\n\nfunction initRoutes(routes) {\n  return {\n    type: _constants.INIT_ROUTES,\n    payload: routes\n  };\n}\n/**\n * Action creator that replaces the current route config\n * @private\n * @param {Array<Route>|ReactElement} routes - New routes\n */\n\n\nfunction replaceRoutes(routes) {\n  return {\n    type: _constants.REPLACE_ROUTES,\n    payload: routes\n  };\n}\n/**\n * Creates an action creator for calling a history API method.\n * @param {string} method - Name of method\n * @returns {ActionCreator} Action creator with same parameters as corresponding\n * history method\n */\n\n\nfunction historyAPI(method) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return {\n      type: _constants.HISTORY_API,\n      payload: {\n        method: method,\n        args: args\n      }\n    };\n  };\n}\n\nvar push = historyAPI('push');\nexports.push = push;\nvar replace = historyAPI('replace');\nexports.replace = replace;\nvar setState = historyAPI('setState');\nexports.setState = setState;\nvar go = historyAPI('go');\nexports.go = go;\nvar goBack = historyAPI('goBack');\nexports.goBack = goBack;\nvar goForward = historyAPI('goForward');\nexports.goForward = goForward;","map":null,"metadata":{},"sourceType":"script"}
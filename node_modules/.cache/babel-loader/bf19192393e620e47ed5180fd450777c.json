{"ast":null,"code":"var _jsxFileName = \"C:\\\\Travail\\\\2-Cours\\\\M2\\\\node\\\\swaap\\\\swaap\\\\frontend\\\\src\\\\index.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport * as reducers from \"./modules/reducers\";\nimport sagas from \"./sagas/sagas\";\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport { Router, Route } from 'react-router'; //TODO : ROUTING AVEC react-router-5\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'production') {\n  middleware.push(logger);\n}\n\nconst store = createStore(combineReducers(reducers), applyMiddleware(...middleware));\nsagas.forEach(saga => sagaMiddleware.run(saga));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/login\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n})), React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Travail/2-Cours/M2/node/swaap/swaap/frontend/src/index.jsx"],"names":["React","ReactDOM","combineReducers","createStore","applyMiddleware","Provider","createSagaMiddleware","logger","reducers","sagas","serviceWorker","App","Router","Route","sagaMiddleware","middleware","process","env","NODE_ENV","push","store","forEach","saga","run","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,cAA9B,C,CACA;;AAEA,MAAMC,cAAc,GAAGR,oBAAoB,EAA3C;AACA,MAAMS,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCH,EAAAA,UAAU,CAACI,IAAX,CAAgBZ,MAAhB;AACH;;AAED,MAAMa,KAAK,GAAGjB,WAAW,CACrBD,eAAe,CAACM,QAAD,CADM,EAErBJ,eAAe,CAAC,GAAGW,UAAJ,CAFM,CAAzB;AAKAN,KAAK,CAACY,OAAN,CAAcC,IAAI,IAAIR,cAAc,CAACS,GAAf,CAAmBD,IAAnB,CAAtB;AAEArB,QAAQ,CAACuB,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAE,QAAb;AAAuB,EAAA,SAAS,EAAET,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,CADJ,EAMiBc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANjB,E,CAQA;AACA;AACA;;AACAhB,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {combineReducers, createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport logger from 'redux-logger'\r\nimport * as reducers from \"./modules/reducers\";\r\nimport sagas from \"./sagas/sagas\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport { Router, Route } from 'react-router';\r\n//TODO : ROUTING AVEC react-router-5\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n    middleware.push(logger)\r\n}\r\n\r\nconst store = createStore(\r\n    combineReducers(reducers),\r\n    applyMiddleware(...middleware),\r\n);\r\n\r\nsagas.forEach(saga => sagaMiddleware.run(saga))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Route path={\"/login\"} component={App}/>\r\n        </Router>\r\n        <App/>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}
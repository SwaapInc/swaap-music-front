{"ast":null,"code":"var _jsxFileName = \"C:\\\\Travail\\\\2-Cours\\\\M2\\\\Projet_Transvers\\\\swaap-music-front\\\\src\\\\components\\\\SavedPlaylist.jsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSavedPlaylist } from \"../modules/playlistManager\";\nimport { toggleSearch } from \"../modules/search\";\n\nconst SavedPlaylist = props => {\n  const playlist = props.playlist;\n\n  const _useSelector = useSelector(state => state.playlists),\n        progressBar = _useSelector.progressBar,\n        playlistId = _useSelector.playlistId;\n\n  const dispatch = useDispatch();\n\n  const _useSelector2 = useSelector(state => state.localize),\n        token = _useSelector2.token;\n\n  return React.createElement(\"div\", {\n    className: \"col-xl-2 justify-content-lg-center\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-widget-2__item\",\n    style: {\n      width: '186px',\n      height: '186px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, playlist.image ? React.createElement(\"div\", {\n    className: \"kt-media kt-media--xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: playlist.image,\n    alt: playlist.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-widget-2__item-title\",\n    style: {\n      maxWidth: 150,\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, playlist.name), playlist.id === playlistId ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, progressBar > 0 && progressBar < 100 ? React.createElement(\"div\", {\n    className: \"progress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"progress-bar progress-bar-striped kt-bg-brand\",\n    role: \"progressbar\",\n    style: {\n      width: progressBar + '%'\n    },\n    \"aria-valuenow\": progressBar,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, progressBar | 0, \"%\")) : React.createElement(\"button\", {\n    className: \"btn btn-elevate btn-brand\",\n    onClick: () => dispatch(toggleSearch()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, token.display_playlist)) : React.createElement(\"button\", {\n    className: \"btn btn-elevate btn-outline-hover-brand btn-icon\",\n    onClick: () => dispatch(getSavedPlaylist({\n      id: playlist.id,\n      tracks: playlist.tracks,\n      playlistName: playlist.name,\n      image: playlist.image\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-download\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))));\n};\n\nexport default SavedPlaylist;","map":{"version":3,"sources":["C:/Travail/2-Cours/M2/Projet_Transvers/swaap-music-front/src/components/SavedPlaylist.jsx"],"names":["React","useDispatch","useSelector","getSavedPlaylist","toggleSearch","SavedPlaylist","props","playlist","state","playlists","progressBar","playlistId","dispatch","localize","token","width","height","image","name","maxWidth","whiteSpace","textOverflow","overflow","id","display_playlist","tracks","playlistName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSavedPlaylist} from \"../modules/playlistManager\";\r\nimport {toggleSearch} from \"../modules/search\";\r\n\r\nconst SavedPlaylist = (props) => {\r\n    const playlist = props.playlist\r\n    const {progressBar, playlistId} = useSelector(state => state.playlists)\r\n    const dispatch = useDispatch()\r\n    const {token} = useSelector(state => state.localize);\r\n\r\n    return (\r\n        <div className=\"col-xl-2 justify-content-lg-center\" align=\"center\">\r\n            <div className=\"kt-widget-2__item\" style={{\r\n                width: '186px',\r\n                height: '186px'\r\n            }}>\r\n                {\r\n                    playlist.image ? (\r\n                        <div className=\"kt-media kt-media--xl\">\r\n                            <img src={playlist.image} alt={playlist.name}/>\r\n                        </div>\r\n                    ) : (\r\n                        <div/>\r\n                    )\r\n                }\r\n                <div className=\"kt-widget-2__item-title\"\r\n                     style={{\r\n                         maxWidth: 150,\r\n                         whiteSpace: 'nowrap',\r\n                         textOverflow: 'ellipsis',\r\n                         overflow: 'hidden'\r\n                     }}\r\n                >\r\n                    {playlist.name}\r\n                </div>\r\n                {\r\n                    playlist.id === playlistId ? (\r\n                        <div>\r\n                            {\r\n                                (progressBar > 0 && progressBar < 100) ? (\r\n                                    <div className=\"progress\">\r\n                                        <div className=\"progress-bar progress-bar-striped kt-bg-brand\" role='progressbar'\r\n                                             style={{\r\n                                                 width: progressBar + '%',\r\n                                             }}\r\n                                             aria-valuenow={progressBar}\r\n                                             aria-valuemin=\"0\"\r\n                                             aria-valuemax=\"100\"\r\n                                        >\r\n                                            {progressBar | 0}%\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <button className=\"btn btn-elevate btn-brand\"\r\n                                            onClick={() => dispatch(toggleSearch())}\r\n                                    >\r\n                                        {token.display_playlist}\r\n                                    </button>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                        <button className=\"btn btn-elevate btn-outline-hover-brand btn-icon\"\r\n                            onClick={() => dispatch(getSavedPlaylist({\r\n                                id: playlist.id,\r\n                                tracks: playlist.tracks,\r\n                                playlistName: playlist.name,\r\n                                image: playlist.image,\r\n                            }))}\r\n                        >\r\n                            <i className=\"fa fa-download\"/>\r\n                        </button>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedPlaylist"]},"metadata":{},"sourceType":"module"}